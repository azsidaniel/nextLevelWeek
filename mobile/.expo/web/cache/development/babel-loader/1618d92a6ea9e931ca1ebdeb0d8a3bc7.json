{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\NextLevelWeek\\\\mobile\\\\src\\\\pages\\\\Recyclers\\\\index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Feather as Icon } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nimport { useNavigation } from '@react-navigation/native';\nimport MapView, { Marker } from 'react-native-maps';\nimport { SvgUri } from 'react-native-svg';\nimport * as Location from 'expo-location';\nimport api from \"../../services/api\";\n;\n\nvar Recyclers = function Recyclers() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      recyclers = _useState4[0],\n      setRecyclers = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedItems = _useState6[0],\n      setSelectedItems = _useState6[1];\n\n  var _useState7 = useState([0, 0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      initialPosition = _useState8[0],\n      setInicialPosition = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var handleNavigateBack = function handleNavigateBack() {\n    navigation.goBack();\n  };\n\n  var handleSelectItem = function handleSelectItem(id) {\n    var alreadySelected = selectedItems.findIndex(function (item) {\n      return item === id;\n    });\n\n    if (alreadySelected >= 0) {\n      var filteredItems = selectedItems.filter(function (item) {\n        return item !== id;\n      });\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([].concat(_toConsumableArray(selectedItems), [id]));\n    }\n  };\n\n  var handleMarkerPress = function handleMarkerPress(id) {\n    navigation.navigate('Detail', {\n      recycler_id: id\n    });\n  };\n\n  useEffect(function () {\n    api.get('items').then(function (response) {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(function () {\n    var loadPosition = function loadPosition() {\n      var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert('Ops...', 'Precisamos de sua permissão para obter a localização');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 9:\n              location = _context.sent;\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n              setInicialPosition([latitude, longitude]);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    loadPosition();\n  }, []);\n  useEffect(function () {\n    api.get('recycler', {\n      params: {\n        city: 'Petrópolis',\n        uf: 'RJ',\n        items: [1, 2]\n      }\n    }).then(function (response) {\n      setRecyclers(response.data);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleNavigateBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 20,\n    color: \"#34cb79\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Bem vindo.\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Encontre no mapa um ponto de coleta.\"), React.createElement(View, {\n    style: styles.mapContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, initialPosition[0] !== 0 && React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: initialPosition[0],\n      longitude: initialPosition[1],\n      latitudeDelta: 0.014,\n      longitudeDelta: 0.014\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, recyclers.map(function (recycler) {\n    return React.createElement(Marker, {\n      key: String(recycler.id),\n      style: styles.mapMarker,\n      coordinate: {\n        latitude: recycler.latitude,\n        longitude: recycler.longitude\n      },\n      onPress: function onPress() {\n        return handleMarkerPress(recycler.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.mapMarkerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: styles.mapMarkerImage,\n      source: {\n        uri: recycler.image\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }), React.createElement(Text, {\n      style: styles.mapMarkerTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, recycler.name)));\n  })))), React.createElement(View, {\n    style: styles.itemsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: {\n      paddingHorizontal: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, items.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: String(item.id),\n      style: [styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}],\n      onPress: function onPress() {\n        return handleSelectItem(item.id);\n      },\n      activeOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, React.createElement(SvgUri, {\n      width: 42,\n      height: 42,\n      uri: item.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.itemTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, item.title));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'Ubuntu_700Bold',\n    marginTop: 24\n  },\n  description: {\n    color: '#6C6C80',\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: 'Roboto_400Regular'\n  },\n  mapContainer: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginTop: 16\n  },\n  map: {\n    width: '100%',\n    height: '100%'\n  },\n  mapMarker: {\n    width: 90,\n    height: 80\n  },\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: '#34CB79',\n    flexDirection: 'column',\n    borderRadius: 8,\n    overflow: 'hidden',\n    alignItems: 'center'\n  },\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: 'cover'\n  },\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: 'Roboto_400Regular',\n    color: '#FFF',\n    fontSize: 13,\n    lineHeight: 23\n  },\n  itemsContainer: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 32\n  },\n  item: {\n    backgroundColor: '#fff',\n    borderWidth: 2,\n    borderColor: '#eee',\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    textAlign: 'center'\n  },\n  selectedItem: {\n    borderColor: '#34CB79',\n    borderWidth: 2\n  },\n  itemTitle: {\n    fontFamily: 'Roboto_400Regular',\n    textAlign: 'center',\n    fontSize: 13\n  }\n});\nexport default Recyclers;","map":{"version":3,"sources":["D:/Projects/NextLevelWeek/mobile/src/pages/Recyclers/index.tsx"],"names":["React","useState","useEffect","Feather","Icon","Constants","useNavigation","MapView","Marker","SvgUri","Location","api","Recyclers","items","setItems","recyclers","setRecyclers","selectedItems","setSelectedItems","initialPosition","setInicialPosition","navigation","handleNavigateBack","goBack","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleMarkerPress","navigate","recycler_id","get","then","response","data","loadPosition","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","location","coords","latitude","longitude","params","city","uf","styles","container","title","description","mapContainer","map","latitudeDelta","longitudeDelta","recycler","String","mapMarker","mapMarkerContainer","mapMarkerImage","uri","image","mapMarkerTitle","name","itemsContainer","paddingHorizontal","includes","selectedItem","image_url","itemTitle","StyleSheet","create","flex","paddingTop","statusBarHeight","fontSize","fontFamily","marginTop","color","width","borderRadius","overflow","height","backgroundColor","flexDirection","alignItems","resizeMode","lineHeight","marginBottom","borderWidth","borderColor","paddingBottom","marginRight","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { StyleSheet, View, TouchableOpacity, Text, ScrollView, Image, Alert} from 'react-native';\nimport {Feather as Icon} from '@expo/vector-icons'\nimport Constants from 'expo-constants';\nimport {useNavigation} from '@react-navigation/native'\nimport MapView, {Marker} from 'react-native-maps';\nimport {SvgUri} from 'react-native-svg';\nimport * as Location from 'expo-location';\nimport api from '../../services/api';\n\ninterface Item{\n  id: number;\n  title: string;\n  image_url: string;\n};\n\ninterface Recycler{\n  id: number;\n  name: string;\n  image: string;\n  latitude: number;\n  longitude: number;\n}\n\n\nconst Recyclers = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [recyclers, setRecyclers] = useState<Recycler[]>([]);\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\n  const [initialPosition, setInicialPosition] = useState<[number, number]>([0,0]);\n  const navigation = useNavigation();\n\n  const handleNavigateBack = () => {\n    navigation.goBack();\n  }\n\n  const handleSelectItem = (id: number) => {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n        const filteredItems = selectedItems.filter(item => item !== id);\n        setSelectedItems(filteredItems);\n    } else {\n        setSelectedItems([...selectedItems, id])\n    }\n};\n\n  const handleMarkerPress = (id: number) => {\n    navigation.navigate('Detail', {recycler_id: id})\n  }\n\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data)\n    })\n  }, []);\n\n  useEffect(() => {\n    const loadPosition = async () => {\n      const {status} = await Location.requestPermissionsAsync();\n\n      if (status !== 'granted') {\n        Alert.alert('Ops...', 'Precisamos de sua permissão para obter a localização');\n        return;\n      }\n\n      const location = await Location.getCurrentPositionAsync();\n      const {latitude, longitude} = location.coords;\n\n      setInicialPosition([latitude, longitude])\n    };\n    loadPosition();\n  }, []);\n\n  useEffect(() => {\n    api.get('recycler', {\n      params: {\n        city: 'Petrópolis',\n        uf: 'RJ',\n        items: [1, 2]\n      }\n    }).then(response => {\n      setRecyclers(response.data);\n    })\n  }, []);\n\n  return (\n    <>\n    <View style={styles.container}>\n      <TouchableOpacity onPress={handleNavigateBack}>\n        <Icon name='arrow-left' size={20} color='#34cb79' />\n      </TouchableOpacity>\n\n      <Text style={styles.title}>Bem vindo.</Text>\n      <Text style={styles.description}>Encontre no mapa um ponto de coleta.</Text>\n      \n      <View style={styles.mapContainer}>\n      {initialPosition[0] !== 0 && (         \n        <MapView \n            style={styles.map}\n            initialRegion={{\n              latitude: initialPosition[0],\n              longitude: initialPosition[1],\n              latitudeDelta: 0.014,\n              longitudeDelta: 0.014\n            }}\n          >\n            {recyclers.map(recycler => (\n              <Marker \n              key={String(recycler.id)}\n              style={styles.mapMarker}\n              coordinate={{\n                latitude: recycler.latitude,\n                longitude: recycler.longitude,\n                }}\n              onPress={() => handleMarkerPress(recycler.id)}\n              >\n                <View style={styles.mapMarkerContainer}>\n                  <Image style={styles.mapMarkerImage} source={{uri: recycler.image}}/>\n                  <Text style={styles.mapMarkerTitle}>{recycler.name}</Text>\n                </View>\n              </Marker>\n            ))}\n          </MapView>\n        )}\n      </View>\n    </View>\n    <View style={styles.itemsContainer}>\n      <ScrollView \n        horizontal\n        showsHorizontalScrollIndicator={false} \n        contentContainerStyle={{paddingHorizontal: 20}}\n      >\n        {items.map(item => (\n          <TouchableOpacity\n            key={String(item.id)}\n            style={[styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}]}\n            onPress={() => handleSelectItem(item.id)}\n            activeOpacity={0.4}\n          >\n            <SvgUri width={42} height={42} uri={item.image_url}/>\n            <Text style={styles.itemTitle}>{item.title}</Text>\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n    </View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight,\n  },\n\n  title: {\n    fontSize: 20,\n    fontFamily: 'Ubuntu_700Bold',\n    marginTop: 24,\n  },\n\n  description: {\n    color: '#6C6C80',\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: 'Roboto_400Regular',\n  },\n\n  mapContainer: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginTop: 16,\n  },\n\n  map: {\n    width: '100%',\n    height: '100%',\n  },\n\n  mapMarker: {\n    width: 90,\n    height: 80, \n  },\n\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: '#34CB79',\n    flexDirection: 'column',\n    borderRadius: 8,\n    overflow: 'hidden',\n    alignItems: 'center'\n  },\n\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: 'cover',\n  },\n\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: 'Roboto_400Regular',\n    color: '#FFF',\n    fontSize: 13,\n    lineHeight: 23,\n  },\n\n  itemsContainer: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 32,\n  },\n\n  item: {\n    backgroundColor: '#fff',\n    borderWidth: 2,\n    borderColor: '#eee',\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n\n    textAlign: 'center',\n  },\n\n  selectedItem: {\n    borderColor: '#34CB79',\n    borderWidth: 2,\n  },\n\n  itemTitle: {\n    fontFamily: 'Roboto_400Regular',\n    textAlign: 'center',\n    fontSize: 13,\n  },\n});\n\nexport default Recyclers;"]},"metadata":{},"sourceType":"module"}