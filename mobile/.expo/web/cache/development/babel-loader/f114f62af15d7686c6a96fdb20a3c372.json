{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\NextLevelWeek\\\\mobile\\\\src\\\\pages\\\\Home\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { RectButton } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport RNPickerSelect from 'react-native-picker-select';\nimport Axios from 'axios';\n\nvar Home = function Home() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      ufs = _useState2[0],\n      setUfs = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cities = _useState4[0],\n      setCities = _useState4[1];\n\n  var _useState5 = useState('0'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedUf = _useState6[0],\n      setSelectedUf = _useState6[1];\n\n  var _useState7 = useState('0'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedCity = _useState8[0],\n      setSelectedCity = _useState8[1];\n\n  var handlePressEntrar = function handlePressEntrar() {\n    navigation.navigate('Recyclers');\n  };\n\n  useEffect(function () {\n    Axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(function (response) {\n      var ufInicials = response.data.map(function (uf) {\n        return {\n          label: uf.sigla,\n          value: uf.sigla,\n          key: uf.sigla\n        };\n      });\n      setUfs(ufInicials);\n    });\n  }, []);\n  useEffect(function () {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    console.log('oi');\n    Axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados/\" + selectedUf + \"/municipios\").then(function (response) {\n      var cityNames = response.data.map(function (city) {\n        return {\n          label: city.nome,\n          value: city.nome,\n          key: city.nome\n        };\n      });\n      setCities(cityNames);\n      console.log(cityNames);\n    });\n  }, [selectedUf]);\n  return React.createElement(ImageBackground, {\n    source: require(\"../../assets/home-background.png\"),\n    style: styles.container,\n    imageStyle: {\n      width: 274,\n      height: 368\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Seu marketplace de coleta de res\\xEDduos\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente.\"), React.createElement(View, {\n    style: styles.pickers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(text) {\n      return setSelectedUf(text);\n    },\n    items: ufs,\n    placeholder: \"Selecione a UF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(text) {\n      return setSelectedCity(text);\n    },\n    items: cities,\n    placeholder: \"Selecione a cidade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(RectButton, {\n    style: styles.button,\n    onPress: handlePressEntrar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttonIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-right\",\n    color: \"#FFF\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Entrar\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 32\n  },\n  pickers: {\n    marginTop: 40\n  },\n  main: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  title: {\n    color: '#322153',\n    fontSize: 32,\n    fontFamily: 'Ubuntu_700Bold',\n    maxWidth: 260,\n    marginTop: 64\n  },\n  description: {\n    color: '#6C6C80',\n    fontSize: 16,\n    marginTop: 16,\n    fontFamily: 'Roboto_400Regular',\n    maxWidth: 260,\n    lineHeight: 24\n  },\n  footer: {},\n  select: {},\n  input: {\n    height: 60,\n    backgroundColor: '#FFF',\n    borderRadius: 10,\n    marginBottom: 8,\n    paddingHorizontal: 24,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#34CB79',\n    height: 60,\n    flexDirection: 'row',\n    borderRadius: 10,\n    overflow: 'hidden',\n    alignItems: 'center',\n    marginTop: 8\n  },\n  buttonIcon: {\n    height: 60,\n    width: 60,\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: '#FFF',\n    fontFamily: 'Roboto_500Medium',\n    fontSize: 16\n  }\n});\nexport default Home;","map":{"version":3,"sources":["D:/Projects/NextLevelWeek/mobile/src/pages/Home/index.tsx"],"names":["React","useEffect","useState","Feather","Icon","RectButton","useNavigation","RNPickerSelect","Axios","Home","navigation","ufs","setUfs","cities","setCities","selectedUf","setSelectedUf","selectedCity","setSelectedCity","handlePressEntrar","navigate","get","then","response","ufInicials","data","map","uf","label","sigla","value","key","console","log","cityNames","city","nome","require","styles","container","width","height","main","title","description","pickers","text","footer","button","buttonIcon","buttonText","StyleSheet","create","flex","padding","marginTop","justifyContent","color","fontSize","fontFamily","maxWidth","lineHeight","select","input","backgroundColor","borderRadius","marginBottom","paddingHorizontal","flexDirection","overflow","alignItems","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport {View, ImageBackground, StyleSheet, Image, Text} from 'react-native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport RNPickerSelect from 'react-native-picker-select';\nimport Axios from 'axios';\ninterface IBGEUfResponse {\n  sigla: string,\n}\n\ninterface IBGECityResponse {\n  nome: string,\n}\ninterface City {\n  label: string,\n  value: string,\n  key: string,\n}\n\ninterface Uf {\n  label: string,\n  value: string,\n  key: string,\n}\n\nconst Home = () => {\n  const navigation = useNavigation();\n  const [ufs, setUfs] = useState<Uf[]>([]);\n  const [cities, setCities] = useState<City[]>([]);\n\n  const [selectedUf, setSelectedUf] = useState<string>('0');\n  const [selectedCity, setSelectedCity] = useState<string>('0');\n\n  const handlePressEntrar = () => {\n    navigation.navigate('Recyclers');\n  }\n\n  useEffect(() => {\n    Axios.get<IBGEUfResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\n    .then(response => {\n        const ufInicials = response.data.map(uf => ({label: uf.sigla, value: uf.sigla, key: uf.sigla}))\n        setUfs(ufInicials)\n    });\n}, [])\n    \n  useEffect(() => {\n      if (selectedUf === '0') {\n        return;\n      }\n      console.log('oi')\n      Axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n      .then(response => {\n          const cityNames = response.data.map(city => ({label: city.nome, value: city.nome, key: city.nome}));\n          setCities(cityNames);\n          console.log(cityNames)\n      })\n  }, [selectedUf])\n\n\n  return (\n    <ImageBackground \n      source={require('../../assets/home-background.png')} \n      style={styles.container}\n      imageStyle={{width: 274, height: 368}}\n    >\n      <View style={styles.main}>\n        <Image source={require('../../assets/logo.png')} />\n        <Text style={styles.title}>Seu marketplace de coleta de resíduos</Text>\n        <Text style={styles.description}>Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente.</Text>\n        <View style={styles.pickers}>\n        <RNPickerSelect\n            onValueChange={(text) => setSelectedUf(text)}\n            items={ufs}\n            placeholder='Selecione a UF'\n        />\n        <RNPickerSelect\n            onValueChange={(text) => setSelectedCity(text)}\n            items={cities}\n            placeholder='Selecione a cidade'\n        />\n        </View>\n      </View>\n      <View style={styles.footer}>\n        <RectButton style={styles.button} onPress={handlePressEntrar}>\n          <View style={styles.buttonIcon}>\n            <Icon name='arrow-right' color='#FFF' size={20}/>\n          </View>\n          <Text style={styles.buttonText}> \n            Entrar\n          </Text>\n        </RectButton>\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 32,\n  },\n\n  pickers: {\n    marginTop: 40,\n  },\n\n  main: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n\n  title: {\n    color: '#322153',\n    fontSize: 32,\n    fontFamily: 'Ubuntu_700Bold',\n    maxWidth: 260,\n    marginTop: 64,\n  },\n\n  description: {\n    color: '#6C6C80',\n    fontSize: 16,\n    marginTop: 16,\n    fontFamily: 'Roboto_400Regular',\n    maxWidth: 260,\n    lineHeight: 24,\n  },\n\n  footer: {},\n\n  select: {},\n\n  input: {\n    height: 60,\n    backgroundColor: '#FFF',\n    borderRadius: 10,\n    marginBottom: 8,\n    paddingHorizontal: 24,\n    fontSize: 16,\n  },\n\n  button: {\n    backgroundColor: '#34CB79',\n    height: 60,\n    flexDirection: 'row',\n    borderRadius: 10,\n    overflow: 'hidden',\n    alignItems: 'center',\n    marginTop: 8,\n  },\n\n  buttonIcon: {\n    height: 60,\n    width: 60,\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  buttonText: {\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: '#FFF',\n    fontFamily: 'Roboto_500Medium',\n    fontSize: 16,\n  }\n});\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}